function [VAlt,VAlt_Sig,noise_median,noise_95,VAltPt] = TWA_by_MMA(Param, TWARes, ecg, Align);%, exp)% OVERVIEW, This function estimates the TWA.%% INPUTS        MAnDATORY       DESCRIPTION%               Param           This structure contains the parameters used%                               for computing TWAs.% %               TWARes          This variable contains the results for TWA%                               analysis. It contains the foloowing fields,%               %               ecg             N by M array of ecg data. Contains M%                               channels of ecg with N data points each.%%               Align           Contains alignment information for each%                               beat in the current analysis window.% OUTPUTS%               VAlt            TWA amplitude estimates for the analysis%                               window.%%               VAlt_Sig        TWA amplitude estimates which are statistically%                               significant compared to the noise threshold%                               estimate.%%               noise_median    median of the gamma distribution used to model the noise.%%               noise_95        95th percentile of the gamma distribution%                               used to model the noise.%%               VAltPt          The location of the point with maximum%                               difference between the average even and odd beats.%%   REPO:%       https://github.com/cliffordlab/PhysioNet-Cardiovascular-Signal-Toolbox%   ORIGINAL SOURCE AND AUTHORS:%       Written by Shamim Nemati, %       editted by Ismail Sadiq on 10/26/2019. %	COPYRIGHT (C) 2019%   LICENSE:%       This software is offered freely and without warranty under%       the GNU (v3 or later) public license. See license file for%       more information. The license may be found in%       the Documents folder of the Physionet-Cardiovascular-Signal-Toolbox.  VAlt=NaN;VAlt_Sig=NaN;noise_median=NaN;noise_95=NaN;if ~isempty(strfind(Param.MethodForEctopy, 'replace'))    % alignments with respect to QRS peak        [TWARes.beat_matrix, TWARes.avg_even TWARes.avg_odd] = CalcBeat_Matrix(Align.fid + Align.f2s, Align.validleads, Align.st, Align.valid, TWARes, ecg);            VAlt = nan(1,size(TWARes.beat_matrix,3)); VAlt_Sig = VAlt; noise_median = VAlt; noise_95 = VAlt;  VAltPt=VAlt;    for lead=1:size(TWARes.beat_matrix,3)        if Align.validleads(lead)            [VAlt(lead), VAlt_Sig(lead) noise_median(lead) noise_95(lead) VAltPt(lead)] = Calc_MMA_Sig(TWARes.beat_matrix(:,:,lead), Param, Align);        end    endend;