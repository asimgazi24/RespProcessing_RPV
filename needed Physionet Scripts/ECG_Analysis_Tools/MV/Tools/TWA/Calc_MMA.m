function [VAlt,VAltPt] = Calc_MMA(beat_matrix, Param, Align)%OVERVIEW, This function computes the max difference and location of the% max difference between the average even and average odd beats.% % INPUTS        MANDATORY       DESCRIPTION%               beat_matrix     Beats by lead by number of beats array%                               which contains the ecg beats across all leads for the%                               current analysis window.%%               Param           Structure which contains the parameters%                               used computing TWAs.%%               Align           Structure which contains the alignment information for each beat %                               in th3e current analysis window.% OUTPUT%               VAlt            The TWA amplitude estimate for current%                               window.%%               VAltPt          The location of the TWA amplitude estimate for current window.%%   REPO:%       https://github.com/cliffordlab/PhysioNet-Cardiovascular-Signal-Toolbox%   ORIGINAL SOURCE AND AUTHORS:%       Written by Shamim Nemati, %       editted by Ismail Sadiq on 10/26/2019. %	COPYRIGHT (C) 2019%   LICENSE:%       This software is offered freely and without warranty under%       the GNU (v3 or later) public license. See license file for%       more information. The license may be found in%       the Documents folder of the Physionet-Cardiovascular-Signal-Toolbox.  even = 2:2:size(beat_matrix,2);odd  = 1:2:size(beat_matrix,2);len = size(beat_matrix,1);Avg = zeros(len, 2, len);VAlt = nan(1,size(beat_matrix, 3) ); VAltPt=VAlt;% for each lead find the max difference between average even and average% odd beat.for lead = 1:size(beat_matrix, 3)        if ~Align.validleads(lead), continue;end     for j = 1:len        if (Param.simple)	      Avg(j, 1, lead) = mean(beat_matrix(j, even, lead)) ;           Avg(j, 2, lead) = mean(beat_matrix(j, odd, lead));        else	      Avg(j, 1, lead) = MMA(beat_matrix(j, even,lead)) ;          Avg(j, 2, lead) = MMA(beat_matrix(j, odd,lead)) ;        end    end    [VAlt(lead) VAltPt(lead)] = max(abs(Avg(:, 1, lead) - Avg(:, 2, lead)));endreturnfunction y = MMA(x)% y is the computed beat value at the jth point within the ST segment.% x(i) is the raw beat value at the jth point within the ST segment.y = x(1); for i = 2:length(x)    df = (x(i) - y) / 8;    if (abs(df) >= 32) % must be mcV?        y = y + sign(df) * 32;    elseif (abs(df) >= 1)        y = y + df;    else        y = y + sign(df);    end       endreturn